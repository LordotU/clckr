// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<RNCSafeAreaView
  onInsetsChange={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
        "overflow": "hidden",
      }
    }
  >
    <View
      pointerEvents="box-none"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <View
        accessibilityElementsHidden={false}
        closing={false}
        gestureVelocityImpact={0.3}
        importantForAccessibility="auto"
        onClose={[Function]}
        onGestureBegin={[Function]}
        onGestureCanceled={[Function]}
        onOpen={[Function]}
        onTransitionStart={[Function]}
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
        transitionSpec={
          Object {
            "close": Object {
              "animation": "spring",
              "config": Object {
                "damping": 500,
                "mass": 3,
                "overshootClamping": true,
                "restDisplacementThreshold": 0.01,
                "restSpeedThreshold": 0.01,
                "stiffness": 1000,
              },
            },
            "open": Object {
              "animation": "spring",
              "config": Object {
                "damping": 500,
                "mass": 3,
                "overshootClamping": true,
                "restDisplacementThreshold": 0.01,
                "restSpeedThreshold": 0.01,
                "stiffness": 1000,
              },
            },
          }
        }
      >
        <View
          pointerEvents="box-none"
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            collapsable={false}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            style={
              Object {
                "flex": 1,
                "transform": Array [
                  Object {
                    "translateX": 0,
                  },
                  Object {
                    "translateX": 0,
                  },
                ],
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                Object {
                  "backgroundColor": "#fff",
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "shadowColor": "#000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": -1,
                  },
                  "shadowOpacity": 0.3,
                  "shadowRadius": 5,
                  "top": 0,
                  "width": 3,
                }
              }
            />
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                    "overflow": "hidden",
                  },
                  Array [
                    Object {
                      "backgroundColor": "rgb(242, 242, 242)",
                    },
                    undefined,
                  ],
                ]
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "flexDirection": "column-reverse",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <View
                    onLayout={[Function]}
                    pointerEvents="box-none"
                    style={
                      Object {
                        "flex": 1,
                        "paddingBottom": 0,
                        "paddingLeft": 0,
                        "paddingRight": 0,
                        "paddingTop": 0,
                      }
                    }
                  >
                    <View
                      accessibilityLabel="Show info"
                      accessible={true}
                      focusable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                          "padding": 8,
                          "position": "absolute",
                          "right": 24,
                          "top": 40,
                          "zIndex": 1,
                        }
                      }
                    >
                      <Image
                        source={
                          Object {
                            "testUri": "../../../assets/images/icon-info-dark.png",
                          }
                        }
                        style={
                          Object {
                            "height": 32,
                            "width": 32,
                          }
                        }
                      />
                    </View>
                    <View
                      accessibilityLabel="Increment counter"
                      accessible={true}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "alignItems": "center",
                          "flex": 1,
                          "justifyContent": "center",
                          "width": "100%",
                        }
                      }
                    >
                      <Text
                        style={
                          Object {
                            "color": "black",
                            "fontFamily": "WorkSans-Thin",
                            "fontSize": 258,
                          }
                        }
                        testID="counterText"
                      >
                        0
                      </Text>
                    </View>
                    <View
                      accessibilityLabel="Reset counter"
                      accessible={true}
                      focusable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                          "paddingHorizontal": 32,
                          "paddingVertical": 12,
                          "width": "100%",
                        }
                      }
                    >
                      <Text
                        style={
                          Object {
                            "borderColor": "black",
                            "borderWidth": 0.5,
                            "color": "black",
                            "fontFamily": "WorkSans-Thin",
                            "fontSize": 24,
                            "padding": 8,
                            "textAlign": "center",
                            "width": "100%",
                          }
                        }
                      >
                        Reset counter
                      </Text>
                    </View>
                    <View
                      accessibilityLabel="Switch contrast"
                      accessible={true}
                      focusable={true}
                      isTVSelectable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                          "paddingHorizontal": 32,
                          "paddingVertical": 12,
                          "width": "100%",
                        }
                      }
                    >
                      <Text
                        style={
                          Object {
                            "borderColor": "black",
                            "borderWidth": 0.5,
                            "color": "black",
                            "fontFamily": "WorkSans-Thin",
                            "fontSize": 24,
                            "padding": 8,
                            "textAlign": "center",
                            "width": "100%",
                          }
                        }
                      >
                        Switch contrast
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    pointerEvents="box-none"
    style={
      Object {
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      accessibilityElementsHidden={false}
      importantForAccessibility="auto"
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    />
  </View>
</RNCSafeAreaView>
`;
